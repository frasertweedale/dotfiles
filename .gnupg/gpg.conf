# use the sks keyserver via hkps
#
keyserver hkps://hkps.pool.sks-keyservers.net
keyserver-options ca-cert-file=~/rc/.gnupg/sks-keyservers.netCA.pem
keyserver-options no-honor-keyserver-url

# when outputting certificates, view user IDs distinctly from keys:
#
fixed-list-mode

# short-keyids are trivially spoofed; it's easy to create a
# long-keyid collision; if you care about strong key identifiers,
# you always want to see the fingerprint:
#
keyid-format 0xlong
with-fingerprint

# when multiple digests are supported by all recipients, choose the
# strongest one:
#
personal-digest-preferences SHA512 SHA384 SHA256 SHA224

# preferences chosen for new keys should prioritize stronger
# algorithms:
#
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 BZIP2 ZLIB ZIP Uncompressed

# If you use a graphical environment (and even if you don't) you
# should be using an agent: (similar arguments as
# www.debian-administration.org/users/dkg/weblog/64)
#
use-agent

# You should always know at a glance which User IDs gpg thinks are
# legitimately bound to the keys in your keyring:
#
verify-options show-uid-validity
list-options show-uid-validity

# when making an OpenPGP certification, use a stronger digest than
# the default SHA1:
#
cert-digest-algo SHA512

keyserver-options auto-key-retrieve
require-cross-certification
ask-cert-level
list-options show-policy-urls

charset utf-8
no-greeting
